input {
tcp {
    port => 514
    type => snort
  }
  udp {
    port => 514
    type => snort
  }
}

filter {
  if [type] == "snort" {

grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:syslog_timestamp}%{IPORHOST:device} snort\[%{INT:snort_pid}\]\:\[%{INT:gid}\:%{INT:sid}\:%{INT:rev}\] %{DATA:ids_alert}\[Classification\: %{DATA:ids_classification}\]\s+\[Priority\:%{INT:ids_priority}\] \{%{WORD:ids_alert_proto}\}%{IP:src_ip}(\:%{INT:src_port})? \-\>%{IP:dst_ip}(\:%{INT:dst_port})?$"}
    match => {"message" =>  "%{TIMESTAMP_ISO8601:syslog_timestamp}%{IPORHOST:device} snort\[%{INT:snort_pid}\]\:\[%{INT:gid}\:%{INT:sid}\:%{INT:rev}\] PSNG_%{DATA:portscan_type}\[Classification\: %{DATA:ids_classification}\]\s+\[Priority\:%{INT:ids_priority}\] \{PROTO\:%{INT}\} %{IP:src_ip} \-\>%{IP:dst_ip}$"}
    match => {"message" => "%{TIMESTAMP_ISO8601:syslog_timestamp}%{IPORHOST:device} %{GREEDYDATA:snort_the_rest}$"}
  }
}
}

output {
# Check that the processed line matched against grok iptables pattern
  if !("_grokparsefailure" in [tags]) {
    elasticsearch { host => localhost }
    stdout { codec => rubydebug }
      }
}
